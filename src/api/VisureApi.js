/*
 * Visengine 2.0
 * Questo servizio offre chiamate di rest per usufruire di tutta una serie di servizi camerali, catastali o di patronato legati a imprese e privati
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.59
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import InlineResponse200 from '../model/InlineResponse200';
import InlineResponse2001 from '../model/InlineResponse2001';

/**
* Visure service.
* @module api/VisureApi
* @version 2.0.0
*/
export default class VisureApi {

    /**
    * Constructs a new VisureApi. 
    * @alias module:api/VisureApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the visureGet operation.
     * @callback moduleapi/VisureApi~visureGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Elenco di tutti i servizi
     * Per ogni elemento dell&#x27;elenco è importante &#x27;hash_visura&#x27;, che identifica il servizio
     * @param {module:api/VisureApi~visureGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    visureGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/visure', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the visureHashVisuraGet operation.
     * @callback moduleapi/VisureApi~visureHashVisuraGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2001{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Servizio identificato con hash_visura
     * Descrizione del servizio con parametri di input, prezzi e istruzioni di convalida.  Per queste 4 visure: - Annuncio Certificato - 1a0a9d4ba06d2220ecce7da0228416ff - Planimetria Catastale - 4ff728695eab3ab9eaa6f58b22cd5734 - Fascicolo Casa - 48a2f2616f248bd5809092aae93af9aa - Durc Online - 3cbbb9c833f1c94af35494820cda3370  è importante scaricare il file di delega che dovrà poi essere caricato durante la fase di POST/richiesta. Il link per scaricare il file di delega è reperibile decodificando in base 64 il campo \&quot;istruzioni\&quot; dell&#x27;oggetto visura.
     * @param {String} hashVisura hash_visura della visura da restituire
     * @param {module:api/VisureApi~visureHashVisuraGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    visureHashVisuraGet(hashVisura, callback) {
      
      let postBody = null;
      // verify the required parameter 'hashVisura' is set
      if (hashVisura === undefined || hashVisura === null) {
        throw new Error("Missing the required parameter 'hashVisura' when calling visureHashVisuraGet");
      }

      let pathParams = {
        'hash_visura': hashVisura
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/visure/{hash_visura}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}