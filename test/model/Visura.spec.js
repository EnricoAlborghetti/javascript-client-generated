/*
 * Visengine 2.0
 * Questo servizio offre chiamate di rest per usufruire di tutta una serie di servizi camerali, catastali o di patronato legati a imprese e privati
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.59
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Visengine20);
  }
}(this, function(expect, Visengine20) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Visura', function() {
      beforeEach(function() {
        instance = new Visengine20.Visura();
      });

      it('should create an instance of Visura', function() {
        // TODO: update the code to test Visura
        expect(instance).to.be.a(Visengine20.Visura);
      });

      it('should have the property nomeVisura (base name: "nome_visura")', function() {
        // TODO: update the code to test the property nomeVisura
        expect(instance).to.have.property('nomeVisura');
        // expect(instance.nomeVisura).to.be(expectedValueLiteral);
      });

      it('should have the property nomeCategoria (base name: "nome_categoria")', function() {
        // TODO: update the code to test the property nomeCategoria
        expect(instance).to.have.property('nomeCategoria');
        // expect(instance.nomeCategoria).to.be(expectedValueLiteral);
      });

      it('should have the property jsonStruttura (base name: "json_struttura")', function() {
        // TODO: update the code to test the property jsonStruttura
        expect(instance).to.have.property('jsonStruttura');
        // expect(instance.jsonStruttura).to.be(expectedValueLiteral);
      });

      it('should have the property ricerca (base name: "ricerca")', function() {
        // TODO: update the code to test the property ricerca
        expect(instance).to.have.property('ricerca');
        // expect(instance.ricerca).to.be(expectedValueLiteral);
      });

      it('should have the property prezzoVisura (base name: "prezzo_visura")', function() {
        // TODO: update the code to test the property prezzoVisura
        expect(instance).to.have.property('prezzoVisura');
        // expect(instance.prezzoVisura).to.be(expectedValueLiteral);
      });

      it('should have the property prezzoRicerca (base name: "prezzo_ricerca")', function() {
        // TODO: update the code to test the property prezzoRicerca
        expect(instance).to.have.property('prezzoRicerca');
        // expect(instance.prezzoRicerca).to.be(expectedValueLiteral);
      });

      it('should have the property hashVisura (base name: "hash_visura")', function() {
        // TODO: update the code to test the property hashVisura
        expect(instance).to.have.property('hashVisura');
        // expect(instance.hashVisura).to.be(expectedValueLiteral);
      });

      it('should have the property opzioni (base name: "opzioni")', function() {
        // TODO: update the code to test the property opzioni
        expect(instance).to.have.property('opzioni');
        // expect(instance.opzioni).to.be(expectedValueLiteral);
      });

      it('should have the property sincrona (base name: "sincrona")', function() {
        // TODO: update the code to test the property sincrona
        expect(instance).to.have.property('sincrona');
        // expect(instance.sincrona).to.be(expectedValueLiteral);
      });

    });
  });

}));
